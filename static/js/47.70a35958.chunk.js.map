{"version":3,"file":"static/js/47.70a35958.chunk.js","mappings":"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","sources":["components/InformationalZT/ThresholdGuidanceInformational.tsx"],"sourcesContent":["import { CSSProperties, useEffect, useState } from \"react\";\r\nimport { useAPIHandler } from \"../../hooks/useAPIHandler\";\r\nimport { sortArrayNistControls } from \"../ZTPage/reducerZTActivity\";\r\nimport { GZT } from \"../DataManagement/DataManagement\";\r\nimport { NISTPanel } from \"../ZTPage/Nist\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\n\r\nconst nistControls: string[] = [\"AC-2(11)\", \"AC-3(3)\", \"AC-3(7)\", \"AC-6(3)\", \"AC-18(5)\", \"AU-3(2)\", \"AU-5(2)\", \"AU-6(6)\", \"AU-9(2)\", \"AU-9(3)\", \"CA-2(2)\", \"CA-2(3)\", \"CA-8\", \"CA-8\", \"IA-10\", \"IA-11\", \"IR-2(1)\", \"IR-2(2)\", \"IR-5(1)\", \"RA-5(10)\", \"SC-7(18)\", \"SC-7(21)\", \"SC-12(1)\", \"SC-24\", \"SI-5(1)\", \"SI-6\", \"SI-6(3)\", \"SI-7(2)\", \"SI-7(5)\", \"SI-10(4)\"];\r\n\r\ntype nistName = {\r\n    name: string;\r\n    cId: string;\r\n}\r\n\r\ntype T_StylingElement = {\r\n    className: string;\r\n    style: CSSProperties;\r\n}\r\n\r\ntype T_ComponentStyling = {\r\n    default: T_StylingElement;\r\n    mobile: T_StylingElement;\r\n}\r\n\r\nconst ThresholdGuidanceInformational = () => {\r\n    const { getNistNamesByIds } = useAPIHandler();\r\n    const [nistElements, setNistElements] = useState<nistName[]>([]);\r\n    const [showNist, setShowNist] = useState(true);\r\n    const [selectedNist, setSelectedNist] = useState('');\r\n    const windowSize = useResponsive();\r\n    const nistFamily = new Set();\r\n\r\n    const nistStyling: T_ComponentStyling = {\r\n        default: {\r\n            className: '',\r\n            style: {\r\n                position: 'fixed',\r\n                maxWidth: 'var(--reading-width)',\r\n                overflowY: 'auto',\r\n                height: '85vh'\r\n            }\r\n        },\r\n        mobile: {\r\n            className: '',\r\n            style: {\r\n                right: 0,\r\n                top: 'var(--content-start-height)',\r\n                height: 'var(--content-height)',\r\n            }\r\n        }\r\n    }\r\n\r\n    const mergedStyle = (windowSize === 'sm') ? {...nistStyling.default.style, ...nistStyling.mobile.style} : nistStyling.default.style;\r\n\r\n    useEffect(() => {\r\n        getNistNamesByIds(nistControls).then((data: nistName[]) => {\r\n            const sortedNist = sortArrayNistControls(data);\r\n            const sortedData: any = sortedNist.map((cId: string) => data.find((x: any) => x.cId === cId));\r\n            setNistElements(sortedData);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ position: 'relative', height: '100%' }}>\r\n            {showNist &&\r\n                <NISTPanel selectedNIST={selectedNist} onExit={() => setShowNist(false)}\r\n                    style={mergedStyle}\r\n                    className='surface-0 shadow-4 border-round ' />\r\n            }\r\n            <h3>Threshold Guidance for Implementing Security Mechanisms within Mission Partner Environment Information Domains (Appendix A):</h3>\r\n            <p className=\"font-italic\" style={{ marginLeft: '2rem' }}>Source: Threshold Guidance v1.1, Sept 2020</p>\r\n            <p>In accordance with References (b) and (d), 477 baseline security controls were identified for a system categorized with a Confidentiality of Moderate, Integrity of Moderate, and an Availability of Moderate with the Classified Overlay and Intelligence Overlay applied. In addition, the following 30 unique security controls, and additional control refinements specified below, are required to ensure an acceptable risk posture.</p>\r\n\r\n            <div>\r\n                <h4>NIST 800-53 Security Controls</h4>\r\n                <div className=\"flex flex-column gap-2\">\r\n                    {nistElements.map((nistElem, index: number) => {\r\n                        const familyId = nistElem.cId.substring(0, 2);\r\n                        let showFamily = false;\r\n                        if (!nistFamily.has(familyId)) {\r\n                            showFamily = true;\r\n                            nistFamily.add(familyId);\r\n                        }\r\n                        return (\r\n                            <div className=\"flex flex-column gap-2\" key={`tg-${nistElem.cId}-${index}`}>\r\n                                {showFamily && GZT?.nistFamily &&\r\n                                    <div className=\"text-md font-bold font-italic\">\r\n                                        {GZT.nistFamily.find((x: any) => x.fId === familyId)?.name}\r\n                                    </div>}\r\n\r\n                                <div className=\"hover:underline cursor-pointer\"\r\n                                    onClick={() => {\r\n                                        setSelectedNist(nistElem.cId);\r\n                                        setShowNist(true);\r\n                                    }}>\r\n                                    {nistElem.cId}: {nistElem.name}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <h4>Cryptography</h4>\r\n                <ul className=\"list-gap\">\r\n                    <li>Systems protecting data-in-transit (DIT), data-at-rest (DAR), or delivering authentication-related security services shall invoke approved cryptographic algorithms from the Commercial National Security Algorithm (CNSA) suite listed in Appendix B.</li>\r\n                    <li>Systems protecting DIT or DAR should use products that have been assessed against applicable secure protocol/technology-specific security requirements and are included on the National Information Assurance Partnership (NIAP) Product Compliant List (PCL).</li>\r\n                    <li>Systems shall not invoke obsolete cryptography or use unevaluated proprietary protocols or obsolete versions of secure protocol standards such as Transport Layer Security (TLS) version 1.1 (and prior versions) and Secure Shell (SSH) version 1.</li>\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <h4>Identity, Credential, and Access Management (ICAM)</h4>\r\n                <p>ICAM capabilities should be based on the “DoD Enterprise Identity, Credential, and Access Management (ICAM) Reference Design,” June 2020 and the “DoD Enterprise Identity, Credential, and Access Management (ICAM) Strategy,” March 2020. The following should also be considered when designing an information domain:</p>\r\n                <ul className=\"list-gap\">\r\n                    <li>The ICAM system should support adding, updating and deleting users and groups via the Lightweight Directory Access Protocol (LDAP).</li>\r\n                    <li>The ICAM system should support adding, assigning, updating, deleting, and querying user attributes for country(ies) of citizenship, COI(s) to which they are a member, clearance, employment type, role, and need-to-know (NTK) attributes.</li>\r\n                    <li>The ICAM system should provide a mechanism that can be queried by MID systems to map security markings to user attributes for clearance, country, COI(s), and NTK attributes.</li>\r\n                    <li>The ICAM system should have the ability to log all change, decision, and query actions performed by the ICAM system.</li>\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <h4>Digital Rights Management</h4>\r\n                <ul className=\"list-gap\">\r\n                    <li>The DRM software should be used for applications that share, edit, and view content.</li>\r\n                    <li>The DRM software should be integrated with Content Labeling Software to ensure that all data is labeled with only those security markings authorized for the individual before saving or sharing the content.</li>\r\n                    <li>The DRM software should be able to restrict access to content for all users to only data for which they are authorized based on information retrieved from the ICAM system.</li>\r\n                    <li>The DRM software should be able to query the ICAM system to obtain a user's authorizations, which should include country, clearance, COI(s), and NTK attributes.</li>\r\n                    <li>The DRM software should use the ICAM system to determine a user's authorization rights to DRM encrypted data.</li>\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <h4>Content Labelling</h4>\r\n                <ul>\r\n                    <li>Content labeling software should have the ability to enforce security markings on all data before sharing the content.</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThresholdGuidanceInformational;"],"names":["nistControls","ThresholdGuidanceInformational","getNistNamesByIds","useAPIHandler","nistElements","setNistElements","useState","showNist","setShowNist","selectedNist","setSelectedNist","windowSize","useResponsive","nistFamily","Set","nistStyling","default","className","style","position","maxWidth","overflowY","height","mobile","right","top","mergedStyle","useEffect","then","data","sortedData","sortArrayNistControls","map","cId","find","x","_jsxs","children","_jsx","NISTPanel","selectedNIST","onExit","marginLeft","nistElem","index","_GZT$nistFamily$find","familyId","substring","showFamily","has","add","GZT","fId","name","onClick","concat"],"sourceRoot":""}